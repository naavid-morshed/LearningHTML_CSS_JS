HTML:   [ref for metadata: https://www.w3schools.com/html/html_head.asp] [Always Specify alt, width, and height for Images]
        [how to write special characters like <, >, & etc: https://www.w3schools.com/html/html_entities.asp]
    notes on tags:
        1. <title></title> [shows in tab]
        2. <a href="https://www.wikipedia.com">This is a link</a> [hyperlink tag for showing link]
                <a href="mailto:someone@example.com">Send email</a> 
                    [mailto: allows user to click link and open in default mail app. it seems to have a predefined color]
                <a href="html_demo.html#C4">Jump to Chapter 4</a>
                    [any html tag can have an id and hyperlink tag can use that id to jump to the specified tag]
        3. <img src=""alt=""> [src is the link, alt is alternate text, alt cannot be fallback image] [gif link works]
        4. <br> for line break
        5. <hr> for full width divider, breaks line as well
        6. <p>does not preserve spaces</p>
        7. <pre> this   preserves spaces   </pre> [fixed-width font (usually Courier)]
        8.  <img src="workplace.jpg" alt="Workplace" usemap="#workmap" width="400" height="379">
            <map name="workmap"> [map tag, super interesting]
            <area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
            <area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
            <area shape="circle" coords="337,300,44" alt="Cup of coffee" href="coffee.htm">
            </map> [interesting concept, copy paste and run this, clicking on individual coordinate will take to 
                    different links] [did not practice this yet]
        9. <picture> [resize window to see picture being changed] [2 use case, bandwidth and format support] 
                     [did not practice this yet]
           <source media="(min-width:650px)" srcset="img_pink_flowers.jpg">
           <source media="(min-width:465px)" srcset="img_white_flower.jpg">
           <img src="img_orange_flowers.jpg" alt="Flowers" style="width:auto;">
           </picture>

        HTML text formatting:
            8. <mark>for highlighting</mark> [yellow is default, can be changed in style]
            9. <b>bold</b>, <strong>Important Text</strong> [there's no difference between strong and bold, 
                                                             other than schemantics. Strong tag emphasizes on importance]
            10. <i>italic</i>, <em>emphasis</em> [both are italic, both does the same thing, em for verbal emphasis,
                                                  i for technical terms, a thought, a name etc]
            11. <small>smaller text</small>
            12. <del>striked through text</del>
            13. <ins>underlined text</ins> [defines text that has been inserted into a document]
            14. <sub>subscripted</sub> [appears half a character below normal line]
            15. <sup>superscripted</sup> [appears half a character above normal line]

        16. <blockquote cite="wikipedia.ord">prints text in the middle with some padding</blockquote> 
                [cite doesn't seem to be necessary and doesn't show in site but it's good practice?]
        17. <abbr title="for hover effect">dotted underline</abbr>
        18. <address>type address here</address> [optional tag, another kind of i or em, less bold italic]
        19. <cite>citation</cite> [optional tag, good for schemantics]
        20. <bdo dir="rtl">This line will be written from right to left</bdo> [another funky tag]
        21. <button onclick="document.location='https://www.wikipedia.org'">GoTo</button> [using button as link]
        22. <table></table> [for html table refer to table/htmltable.html, for bs5 table reder to LearningBootstrap repo]
        23. for list tags check list folder, for bs5 list check LearningBootstrap
            [style="list-style-type:disc;"] [instead of disc, can use circle, square, none] [can put them in ext CSS]
        24. <ol type="1"> [types are marker type, other types are A, a, I, i]
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
            </ol> [ol or ul can be nested]
        25. <iframe src="navigation_menu_using_list.html" title="iframe example" frameborder="1"></iframe>
                [refrain from using iframe willy nilly, for security purpose]
        26. <noscript>Sorry, your browser does not support JavaScript!</noscript>
            [alternate content to be displayed to users that have disabled scripts in their 
             browser or have a browser that doesn't support scripts]
        27. <kbd>ctrl + k</kbd>

    notes on attributes and misc:
        [
            1. HTML is not case sensitive, neither tags nor attributes. lowecase is the convention.
            2. Style attribute is inherent to HTML? Or is it CSS under the hood? [it is inline CSS, it should not be used too much]
            3. lang="en" inside html tag is for assisting search engines by declaring language of the Web page.
            4. use title attribute inside tags to for hover text [title doesn't need to be double quoted but do it anyway]
            5. style="font-family: Arial;font-size: 150%;" [font size can also be larger, large etc.]
            6. internal CSS is CSS inside html file, external is referred with rel and href attributes inside link tag.
            7. target attribute is of 5 types (4 defined, 1 custom):
                a) _blank [opens in new tab or window]
                b) _self [default, same frame as it was clicked from]
                c) _parent [opens in parent frame]
                d) _top [Opens the linked document in the full body of the window]
                e) framename [opens linked document in named frame]
            8. style="float:right" [floats images to right or left, tags other than images work?]
            9. [what does coords attribute do?] [used to make an area clickable as circle, rectangle, ploygon or the entire area]
            10. onclick="alert('Hello World!')" [button attribute, alert will show a notification style
                                                 alert.]

        ]

CSS:
    properties:
        1. a:link {
            color: black;
            text-decoration: underline;
           } [link will be of black color]

        2. a:hover {
            color: red;
            text-decoration: none;
           } [hovering over link will paint it red and can change decoration if specified]

        3. a:visited {
            color: teal;
           } [once link is clicked at least once, link color will turn teal]

        4. a:active {
            color: aqua;
           } [clicking on link will momemtarily turn its color to aqua] [multiple css properties can be combined,
                                                                            eg. a:link, a:visited {}]
        5. p {
            background-image: url('url here'); [both single and double quote works]
            background-repeat: no-repeat; [it will repeat by default]
            background-size: cover; [covers entire element, elements and tags are the same thing]
            background-attachment: fixed; [to make sure entire element is always covered]
            background-size: 100% 100%; [makes sure image stretches to cover entire element]
           }
        6. li {
            float: left; [float lef makes list items horizontal, has to be used with overflow hidden inside ol/ul]
           } [bad practice most likely, avoid using this. check navigation_menu_using_list.css]

    notes:
        1. External CSS must not contain any html code [use link tag in html file to point to css file]
        2. Example of internal CSS, looks ugly
                <html>
                <head>
                    <style>
                    body {
                            background-color: powderblue;
                    }
                    h1 {
                            color: blue;
                    }
                    p {
                        color: red;
                    }
                    </style>
                </head>
                    <body>

                    <h1>This is a heading</h1>
                    <p>This is a paragraph.</p>

                    </body>
                </html>
        3. css can be heavily customized [keep exploring]
        4. all style attributes (which are also inline CSS) can be written in external CSS file 
           to reduce clutter in HTML page
        5. inline CSS overwrites both internal and external CSS [are there exceptions?]
        6. 

JS: [use "<br>" inside function for line break] 
    [form handling is done in test_two/modal_with_form.html|js. very important]
    [documents can be got by name, id, class & tag]
    [form validation can be done with both html and js, pick your poison]
    1.  <script> [demo is referring to element id] [many combinations are possible]
            document.getElementById("demo").innerHTML = "Hello JavaScript!"; [use innerText for dynamic text]
            document.getElementById("demo").style.fontSize = "25px";
            document.getElementById("demo").style.color = "red";
            document.getElementById("demo").style.backgroundColor = "yellow";
            document.getElementById("image").src = "picture.gif";
        </script>
    2. <script type="text/javascript"> [type provides information to the browser about the data] 
                                   [omitting this does not cause issues but should still be written for
                                    faster loading as browsers cache external js files, check for security issues]
        document.write("hello world"); [this will write hello world to an html file]
        alert("Hello java")
        window.value=100; [declaring global variable by window object]
   </script>
    3. Comparison operators:
        a) == [compares value regardless of data type]
        b) === [identical operator, compares both value and type]
        c) != [opposite of a)]
        d) !== [opposite of b)]
    4. Bitwise operators [i don't understand all of them, will study as needed]
        a) &
        b) |
        c) ^
        d) ~
        e) <<
        f) >>
        g) >>>
    5. Logical operators [these are used more often]
        a) && [AND] 
        b) || [OR]
        c) !  [NOT]
    6. Assignment operators [common sense, check https://www.javatpoint.com/javascript-operators if needed]
    7. Special operators [check link for details]
        a) (?:)
        b) ,
        c) delete
        d) in
        e) instanceof
        f) new
        g) typeof
        h) void
        i) yield
    8. if else [same as java/dart]
    9. switch(){ [is break needed everytime?] [yes sorta, The switch statement is fall-through i.e. 
                                               all the cases will be evaluated if you don't use break statement]
        case val1:
            execute code;
            break;
        case val2:
            execute code;
            break;
        case val3:
            execute code;
            break;
        default:
            execute code;
    }
    10. for, while, dowhile [same as java/dart]
    11. for in loop [learn this later]
    12. function multiplier(num, multiply_by){ [basic function]
            alert(num * multiply_by);
        }
    13. var add=new Function("num1","num2","return num1+num2"); [another way of defining a function]
    14. Objects [important and confusing, check here https://www.javatpoint.com/javascript-objects]
    15. var arr = [1,2,3]; [read array methods from here https://www.javatpoint.com/javascript-array]
        var arr = new Array(); 
            arr[0] = "sad";
            arr[1] = "sadfff";
            arr[2] = "gf";
        var arr = new Array("sad","afds","asf");
    16. [Strings can be declared like other variables (as literals) or as an object] 
        [read String methods here https://www.javatpoint.com/javascript-string]
        [str.charAt(2) and str[2] does the same thing]
    17. Date object [https://www.javatpoint.com/javascript-date]
        [basic use, create obj from Date() class, then create vars that can get data from obj via methods]
    18. math library [https://www.javatpoint.com/javascript-math]
    19. number object [seems important, parseint/isfloat and 
                       other important methods are present
                       https://www.javatpoint.com/javascript-number]
    20. document.write(10<20); [will write true]
    21. confirm("are you sure?") [this method depending on user input returns a boolean and 
                                  can be assigned to a variable. eg. var v = confirm("dfg?")] 
    22. <script type="text/javascript">  [this can also be done with plain html]
            function msg(){  
                open("http://www.javatpoint.com");  [opens this url in new tab]
            }
        </script>
        <input type="button" value="javatpoint" onclick="msg()"/> 
    23. setTimeout(function(),2000) [runs function after 2000ms]
    24. history.back(); //for previous page  [png available in file]
        history.forward(); //for next page  
        history.go(2); //for next 2nd page  
        history.go(-2); //for previous 2nd page 
    25. JavaScript Navigator Object [check screenshot folder]
    26. screen.height|width|availWidth|availHeight|colorDepth|pixelDepth [check ss folder]
    27. 